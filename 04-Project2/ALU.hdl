// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/2/ALU.hdl




/**
 * ALU (Arithmetic Logic Unit):
 * Computes out = one of the following functions:
 *                0, 1, -1,
 *                x, y, !x, !y, -x, -y,
 *                x + 1, y + 1, x - 1, y - 1,
 *                x + y, x - y, y - x,
 *                x & y, x | y
 * on the 16-bit inputs x, y,
 * according to the input bits zx, nx, zy, ny, f, no.
 * In addition, computes the two output bits:
 * if (out == 0) zr = 1, else zr = 0
 * if (out < 0)  ng = 1, else ng = 0
 */
// Implementation: Manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) sets x = 0        // 16-bit constant
// if (nx == 1) sets x = !x       // bitwise not
// if (zy == 1) sets y = 0        // 16-bit constant
// if (ny == 1) sets y = !y       // bitwise not
// if (f == 1)  sets out = x + y  // integer 2's complement addition
// if (f == 0)  sets out = x & y  // bitwise and
// if (no == 1) sets out = !out   // bitwise not

CHIP ALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute (out = x + y) or (out = x & y)?
        no; // negate the out output?
    OUT 
        out[16], // 16-bit output
        zr,      // if (out == 0) equals 1, else 0
        ng;      // if (out < 0)  equals 1, else 0

    PARTS:

    // zx
    Mux16(a=x, b[0..15]=false, sel=zx, out=Zx);
    Not16(in=Zx, out=NZx);

    // nx
    Mux16(a=Zx, b=NZx, sel=nx, out=NX);
    
    // zy
    Mux16(a=y, b[0..15]=false, sel=zy, out=Zy);
    Not16(in=Zy, out=NZy);

    // ny
    Mux16(a=Zy, b=NZy, sel=ny, out=NY);
    

    // f
    Add16(a=NX,b=NY,out=PLUS);
    And16(a=NX,b=NY,out=AND);
    Mux16(a=AND, b=PLUS, sel=f, out=F);

    // no       
    Not16(in=F, out=NF);
    Mux16(a=F, b=NF, sel=no, out=O);
    Or16(a=O , b=O , out=out );

    // I guess there is no Or16Way so I will have to add
    // an HDL file for one to the upload for submission.
    // I'd make one from 2 Or8Way chips, but this online IDE does not
    // have a way to make custom chips.

    // if out is all zeros then zr = 1 else 0
    //Or16Way(in=O, out=ZR);
    //Not(in=ZR , out=zr);

    And16(a[0..15]=true,b=O,out[15]=ng);
}